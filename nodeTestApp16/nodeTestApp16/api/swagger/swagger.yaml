swagger: "2.0"
info:
  version: "0.0.4"
  title: nodeTestApp16
host: dockerHostIp:10010
basePath: /
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:

### INDEX ###

## JSON API ###  

  # JSON only API: Index
  /api:
    x-swagger-pipe: swagger_raw
    #

## HTML WEB ##
  # HTML Web: Index
  /:
    x-swagger-router-controller: context_html_web_index
    get:
      description: Redirects to localized main html (locale is detected according to req.acceptsLanguages() in express.js)
      produces: 
        - text/html
      operationId: index
      responses:
        "302":
          description: Successfully found localized main html (Code '302' is the default for a successful redirect in express.js)
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}:
    x-swagger-router-controller: context_html_web_index
    get:
      description: Returns a localized main html
      produces: 
        - text/html
      operationId: index_locale
      parameters:
        - $ref: "#/parameters/locale"
      responses:
        "200":
          description: Successfully GOT a localized main html
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/about:
    x-swagger-router-controller: context_html_web_index
    get:
      description: Returns a localized main html
      produces: 
        - text/html
      operationId: about
      parameters:
        - $ref: "#/parameters/locale"
      responses:
        "200":
          description: Successfully GOT a localized about html
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/contact:
    x-swagger-router-controller: context_html_web_index
    get:
      description: Returns a localized main html
      produces: 
        - text/html
      operationId: contact
      parameters:
        - $ref: "#/parameters/locale"
      responses:
        "200":
          description: Successfully GOT a localized contact html
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/imprint:
    x-swagger-router-controller: context_html_web_index
    get:
      description: Returns a localized main html
      produces: 
        - text/html
      operationId: imprint
      parameters:
        - $ref: "#/parameters/locale"
      responses:
        "200":
          description: Successfully GOT a localized imprint html
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


### Graph ### 

## JSON only API: Graph as JSON for visualization ##
  /graph:
    x-swagger-router-controller: context_json_api_graph
    get:
      description: Returns JSON of graph with IDed nodes and links (TODO type description)
      operationId: readGraph
      responses:
        "200":
          description: Successfully GOT visualize
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

## HTML Web: Create one and Read (several) relationships(s)
  /{locale}/graph/relationship/create:
    x-swagger-router-controller: context_html_web_graph
    get:
      description: Returns html view for a relationship (from person to movie) creation form
      produces: 
        - text/html
      operationId: getCreate
      parameters:
        - $ref: "#/parameters/locale"
      responses:
        "200":
          description: Successfully GOT view for relationship creation form
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new relationship entry via Web (HTML in Browser)
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: create
      parameters:
        - $ref: "#/parameters/locale"
        - name: source
          required: true
          in: formData
          description: a new relationships startpoint (person)
          type: string
        - name: type
          required: true
          in: formData
          description: a new relationships type
          type: string
        - name: target
          required: true
          in: formData
          description: a new relationships endpoint (movie or person)
          type: string
        - name: property
          required: false
          in: formData
          description: a new relationships property (only for 'ACTED_IN' and 'REVIEWED')
          type: string
      responses:
        "200":
          description: Successfully stored a new relationship
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

### Nodes ###

## Movies ## 

# JSON only API: Create and Read (several movies)
  /api/movies:
    x-swagger-router-controller: context_json_api_movies
    post:
      description: Creates a new movie entry via JSON API
      operationId: create
      parameters:
        - name: movie
          required: true
          in: body
          description: a new movies details
          schema:
            $ref: "#/definitions/MovieBody"
      responses:
        "200":
          description: Successfully stored movie
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns a list of movies via JSON API
      operationId: readBulk
      parameters:
        - name: released
          in: query
          description: filters movies by released date
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MoviesListBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# JSON only API: Read (one movie), Update(one movie), and Delete (one movie)
  /api/movies/{id}:
    x-swagger-router-controller: context_json_api_movies
    get:
      description: Returns a single movie entry by a given id 
      operationId: read
      parameters:
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully retrieved a movie
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a single movie entry by a given id 
      operationId: update
      parameters:
        - $ref: "#/parameters/id"
        - name: movie
          required: true
          in: body
          description: Details to be updated
          schema:
            $ref: "#/definitions/MovieBody"
      responses:
        "200":
          description: Successfully updated a movie
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a single movie entry by a given id
      operationId: delete
      parameters:
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully deleted a movie
          schema:
            $ref: "#/definitions/DeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# JSON only API: Read distinct values from movie properties to use e.g. in a dropdown for inQueryParams
  /api/movies/read/distinct:
    x-swagger-router-controller: context_json_api_movies
    get:
      description: Returns JSON with an Array of all distinct values from node property passed in as inQeryParam
      operationId: readDistinct
      parameters:
        - $ref: "#/parameters/propertyName"
      responses:
        "200":
          description: Successfully GOT distinct values for a movie property
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
#  add enum here

# HTML Web: Create and Read (several movies)
  /{locale}/movies/create:
    x-swagger-router-controller: context_html_web_movies
    get:
      description: Returns html view for movie creation from
      produces: 
        - text/html
      operationId: getCreate
      parameters:
        - $ref: "#/parameters/locale"
      responses:
        "200":
          description: Successfully GOT form for movie creation
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new movie entry via Web (HTML in Browser)
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: create
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/title"
        - $ref: "#/parameters/tagline"
        - $ref: "#/parameters/released"
        # - name: title
      responses:
        "200":
          description: Successfully stored movie
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/movies:  
    x-swagger-router-controller: context_html_web_movies
    get:
      description: Returns a list of movies
      produces: 
        - text/html
      operationId: readBulk
      parameters:
        - $ref: "#/parameters/locale"
        - name: released
          in: query
          description: filters movies by released date
          type: integer
      responses:
        "200":
          description: Successfully retrieved a list of movies
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# HTML Web: Read (one movie), Update(one movie), and Delete (one movie)
  /{locale}/movies/read/{id}:
    x-swagger-router-controller: context_html_web_movies
    get:
      description: Returns a single movie entry by a given id 
      operationId: read
      produces: 
        - text/html
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully GOT a movie
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/movies/update/{id}:
    x-swagger-router-controller: context_html_web_movies
    get:
      description: Returns html view for a movie update form
      produces: 
        - text/html
      operationId: getUpdate
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully GOT form for a movie update
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Updates a single movie entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: update
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/title"
        - $ref: "#/parameters/tagline"
        - $ref: "#/parameters/released"
      responses:
        "200":
          description: Successfully updated a movie 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/movies/delete/{id}:
    x-swagger-router-controller: context_html_web_movies
    get:
      description: Returns html view for a disabled movie deletion form
      produces: 
        - text/html
      operationId: getDelete
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully GOT a form for a movie deletion
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Deletes a single movie entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: delete
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully deleted a movie 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

## Persons ## 

# JSON only API: Create and Read (several persons) #
  /api/persons:
    x-swagger-router-controller: context_json_api_persons
    post:
      description: Creates a new person entry via JSON API
      operationId: create
      parameters:
        - name: person
          required: true
          in: body
          description: a new persons details
          schema:
            $ref: "#/definitions/PersonBody"
      responses:
        "200":
          description: Successfully stored person
          schema:
            $ref: "#/definitions/PersonBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns a list of persons via JSON API
      operationId: readBulk
      parameters:
        - name: born
          in: query
          description: filters persons by birth date
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PersonsListBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# JSON only API: Read (one person), Update(one person), and Delete (one person) #
  /api/persons/{id}:
    x-swagger-router-controller: context_json_api_persons
    get:
      description: Returns a single person entry by a given id 
      operationId: read
      parameters:
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully retrieved a person
          schema:
            $ref: "#/definitions/PersonBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a single person entry by a given id 
      operationId: update
      parameters:
        - $ref: "#/parameters/id"
        - name: person
          required: true
          in: body
          description: Details to be updated
          schema:
            $ref: "#/definitions/PersonBody"
      responses:
        "200":
          description: Successfully updated a person
          schema:
            $ref: "#/definitions/PersonBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a single person entry by a given id
      operationId: delete
      parameters:
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully deleted a person
          schema:
            $ref: "#/definitions/DeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# JSON only API: Read distinct values from person properties to use e.g. in a dropdown for inQueryParams
  /api/persons/read/distinct:
    x-swagger-router-controller: context_json_api_persons
    get:
      description: Returns JSON with an Array of all distinct values from node property passed in as inQeryParam
      operationId: readDistinct
      parameters:
        - $ref: "#/parameters/propertyName"
      responses:
        "200":
          description: Successfully GOT distinct values for a person property
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# HTML Web: Create and Read (several persons) #
  /{locale}/persons/create:
    x-swagger-router-controller: context_html_web_persons
    get:
      description: Returns html view for a person creation form
      produces: 
        - text/html
      operationId: getCreate
      parameters:
        - $ref: "#/parameters/locale"
      responses:
        "200":
          description: Successfully GOT view for person creation form
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new person entry via Web (HTML in Browser)
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: create
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/name"
        - $ref: "#/parameters/born"
      responses:
        "200":
          description: Successfully stored a new person
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/persons:
    x-swagger-router-controller: context_html_web_persons
    get:
      description: Returns a list of persons
      produces: 
        - text/html
      operationId: readBulk
      parameters:
        - $ref: "#/parameters/locale"
        - name: born
          in: query
          description: filters persons by birth date
          type: integer
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# HTML Web: Read (one person), Update(one person), and Delete (one person)
  /{locale}/persons/read/{id}:
    x-swagger-router-controller: context_html_web_persons
    get:
      description: Returns a single person entry by a given id 
      operationId: read
      produces: 
        - text/html
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully GOT a person
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/persons/update/{id}:
    x-swagger-router-controller: context_html_web_persons
    get:
      description: Returns html view for a person update form
      produces: 
        - text/html
      operationId: getUpdate
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully GOT person for update
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Updates a single person entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: update
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/name"
        - $ref: "#/parameters/born"
      responses:
        "200":
          description: Successfully updated a person 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /{locale}/persons/delete/{id}:
    x-swagger-router-controller: context_html_web_persons
    get:
      description: Returns html view for a disabled person deletion from
      produces: 
        - text/html
      operationId: getDelete
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully GOT a person for deletion
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Deletes a single person entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: delete
      parameters:
        - $ref: "#/parameters/locale"
        - $ref: "#/parameters/id"
      responses:
        "200":
          description: Successfully deleted a person 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw


### Definitions ###

## Reusable parameters ##
parameters:

# General #
  locale:
    name: locale
    required: true
    in: path
    description: Used for detecting and setting the UI language.
    type: string
    enum: [ en, es, de, fr] 
    # @TODO: Move locale (enum) to app or context config
  id:
    name: id
    required: true
    description: The id (as provided by the database) for an instance of a nodeType.
    in: path
    type: string
  propertyName:
    name: propertyName
    required: true
    in: query
    description: The name of the property of which all distinct values are to be returned.
    type: string
    enum: [ released, born] 

# Movies #
  title:
    name: title
    required: true
    in: formData
    description: The (main) title of the movie.
    type: string
  tagline:
    name: tagline
    required: true
    in: formData
    description: The tagline, slogan or subtitle which the movie has.
    type: string
  released:
    name: released
    required: true
    in: formData
    description: They year YYYY which the movie was released in.
    type: integer

# Persons #
  name:
    name: name
    required: true
    in: formData
    description: a new persons full name
    type: string
  born:
    name: born
    required: true
    in: formData
    description: a new persons birth date
    type: integer


## Complex Objects' schema definitions ##
definitions:

#Movies#
  MoviesListBody:
    required:
      - movies
    properties:
      movies:
        type: array
        items:
          $ref: "#/definitions/MovieEntry"

  MovieEntry:
    type: object
    $ref: "#/definitions/Movie"    

  Movie:
    required:
      - tagline
      - title
      - released
    properties:
      tagline:
        type: string
      title:
        type: string
      released:
        type: integer
      # rank:
      #   type: integer
      #   default: 5
      #   minimum: 1
      #   maximum: 10

  MovieBody:
    required:
      - movie
    properties:
      movie:
        $ref: "#/definitions/Movie"

# Persons # 
  PersonsListBody:
    required:
      - persons
    properties:
      persons:
        type: array
        items:
          $ref: "#/definitions/PersonEntry"

  PersonEntry:
    type: object
    $ref: "#/definitions/Person"    

  Person:
    required:
      - name
      - born
    properties:
      name:
        type: string
      born:
        type: integer
      rank:
        type: integer
        default: 5
        minimum: 1
        maximum: 10

  PersonBody:
    required:
      - person
    properties:
      person:
        $ref: "#/definitions/Person"

# Responses #
  DeleteResponse:
    required:
      - nodes_deleted
    properties:
      nodes_deleted:
        type: integer

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
