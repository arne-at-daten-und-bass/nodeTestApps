swagger: "2.0"
info:
  version: "0.0.1"
  title: nodeTestApp16
host: dockerHostIp:10010
basePath: /
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  # JSON only API: Index
  /api:
    x-swagger-pipe: swagger_raw

  # JSON only API: Graph as JSON for visualization
  /graph:
    x-swagger-router-controller: json_api_graph
    get:
      description: Returns JSON of graph with IDed nodes and links (TODO type description)
      operationId: readGraph
      responses:
        "200":
          description: Successfully GOT visualize
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # HTML Web: Index
  /:
    x-swagger-router-controller: html_web_graph
    get:
      description: Returns main html
      produces: 
        - text/html
      operationId: index
      responses:
        "200":
          description: Successfully GOT main html
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


### Graph ### 

 # HTML Web: Create one and Read (several) relationships(s)
  /graph/relationship/create:
    x-swagger-router-controller: html_web_graph
    get:
      description: Returns html view for a relationship (from person to movie) creation form
      produces: 
        - text/html
      operationId: getCreate
      responses:
        "200":
          description: Successfully GOT view for relationship creation form
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new relationship entry via Web (HTML in Browser)
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: create
      parameters:
        - name: source
          required: true
          in: formData
          description: a new relationships startpoint (person)
          type: string
        - name: type
          required: true
          in: formData
          description: a new relationships type
          type: string
        - name: target
          required: true
          in: formData
          description: a new relationships endpoint (movie or person)
          type: string
        - name: property
          required: false
          in: formData
          description: a new relationships property (only for 'ACTED_IN' and 'REVIEWED')
          type: string
      responses:
        "200":
          description: Successfully stored a new relationship
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

###

### Movies ### 
  # JSON only API: Create and Read (several movies)
  /api/movies:
    x-swagger-router-controller: json_api_movies
    post:
      description: Creates a new movie entry via JSON API
      operationId: create
      parameters:
        - name: movie
          required: true
          in: body
          description: a new movies details
          schema:
            $ref: "#/definitions/MovieBody"
      responses:
        "200":
          description: Successfully stored movie
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns a list of movies via JSON API
      operationId: readBulk
      parameters:
        - name: released
          in: query
          description: filters movies by released date
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MoviesListBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # HTML Web: Create and Read (several movies)
  /movies/create:
    x-swagger-router-controller: html_web_movies
    get:
      description: Returns html view for movie creation from
      produces: 
        - text/html
      operationId: getCreate
      responses:
        "200":
          description: Successfully GOT form for movie creation
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new movie entry via Web (HTML in Browser)
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: create
      parameters:
        - name: title
          required: true
          in: formData
          description: a new movies title
          type: string
        - name: tagline
          required: true
          in: formData
          description: a new movies tagline
          type: string
        - name: released
          required: true
          in: formData
          description: a new movies released date
          type: integer
      responses:
        "200":
          description: Successfully stored movie
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /movies:
    x-swagger-router-controller: html_web_movies
    get:
      description: Returns a list of movies
      produces: 
        - text/html
      operationId: readBulk
      parameters:
        - name: released
          in: query
          description: filters movies by released date
          type: integer
      responses:
        "200":
          description: Successfully retrieved a list of movies
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # JSON only API: Read (one movie), Update(one movie), and Delete (one movie)
  /api/movies/{movieId}:
    x-swagger-router-controller: json_api_movies
    get:
      description: Returns a single movie entry by a given id 
      operationId: read
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully retrieved a movie
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a single movie entry by a given id 
      operationId: update
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
        - name: movie
          required: true
          in: body
          description: Details to be updated
          schema:
            $ref: "#/definitions/MovieBody"
      responses:
        "200":
          description: Successfully updated a movie
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a single movie entry by a given id
      operationId: delete
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully deleted a movie
          schema:
            $ref: "#/definitions/DeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # HTML Web: Read (one movie), Update(one movie), and Delete (one movie)
  /movies/read/{movieId}:
    x-swagger-router-controller: html_web_movies
    get:
      description: Returns a single movie entry by a given id 
      operationId: read
      produces: 
        - text/html
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully GOT a movie
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /movies/update/{movieId}:
    x-swagger-router-controller: html_web_movies
    get:
      description: Returns html view for a movie update form
      produces: 
        - text/html
      operationId: getUpdate
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully GOT form for a movie update
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Updates a single movie entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: update
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
        - name: title
          required: true
          in: formData
          description: movie title to update 
          type: string
        - name: tagline
          required: true
          in: formData
          description: movie tagline to update 
          type: string
        - name: released
          required: true
          in: formData
          description: movie released date to update 
          type: integer
      responses:
        "200":
          description: Successfully updated a movie 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /movies/delete/{movieId}:
    x-swagger-router-controller: html_web_movies
    get:
      description: Returns html view for a disabled movie deletion form
      produces: 
        - text/html
      operationId: getDelete
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully GOT a form for a movie deletion
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Deletes a single movie entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: delete
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully deleted a movie 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

### Persons ### 
  # JSON only API: Create and Read (several persons)
  /api/persons:
    x-swagger-router-controller: json_api_persons
    post:
      description: Creates a new person entry via JSON API
      operationId: create
      parameters:
        - name: person
          required: true
          in: body
          description: a new persons details
          schema:
            $ref: "#/definitions/PersonBody"
      responses:
        "200":
          description: Successfully stored person
          schema:
            $ref: "#/definitions/PersonBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns a list of persons via JSON API
      operationId: readBulk
      parameters:
        - name: born
          in: query
          description: filters persons by birth date
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PersonsListBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # HTML Web: Create and Read (several persons)
  /persons/create:
    x-swagger-router-controller: html_web_persons
    get:
      description: Returns html view for a person creation form
      produces: 
        - text/html
      operationId: getCreate
      responses:
        "200":
          description: Successfully GOT view for person creation form
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new person entry via Web (HTML in Browser)
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: create
      parameters:
        - name: born
          required: true
          in: formData
          description: a new persons birth date
          type: integer
        - name: name
          required: true
          in: formData
          description: a new persons full name
          type: string
      responses:
        "200":
          description: Successfully stored a new person
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /persons:
    x-swagger-router-controller: html_web_persons
    get:
      description: Returns a list of persons
      produces: 
        - text/html
      operationId: readBulk
      parameters:
        - name: born
          in: query
          description: filters persons by birth date
          type: integer
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # JSON only API: Read (one person), Update(one person), and Delete (one person)
  /api/persons/{personId}:
    x-swagger-router-controller: json_api_persons
    get:
      description: Returns a single person entry by a given id 
      operationId: read
      parameters:
        - name: personId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully retrieved a person
          schema:
            $ref: "#/definitions/PersonBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a single person entry by a given id 
      operationId: update
      parameters:
        - name: personId
          required: true
          in: path
          type: string
        - name: person
          required: true
          in: body
          description: Details to be updated
          schema:
            $ref: "#/definitions/PersonBody"
      responses:
        "200":
          description: Successfully updated a person
          schema:
            $ref: "#/definitions/PersonBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a single person entry by a given id
      operationId: delete
      parameters:
        - name: personId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully deleted a person
          schema:
            $ref: "#/definitions/DeleteResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

 # HTML Web: Read (one person), Update(one person), and Delete (one person)
  /persons/read/{personId}:
    x-swagger-router-controller: html_web_persons
    get:
      description: Returns a single person entry by a given id 
      operationId: read
      produces: 
        - text/html
      parameters:
        - name: personId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully GOT a person
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /persons/update/{personId}:
    x-swagger-router-controller: html_web_persons
    get:
      description: Returns html view for a person update form
      produces: 
        - text/html
      operationId: getUpdate
      parameters:
        - name: personId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully GOT person for update
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Updates a single person entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: update
      parameters:
        - name: personId
          required: true
          in: path
          type: string
        - name: name
          required: true
          in: formData
          description: the name to update
          type: string
        - name: born
          required: true
          in: formData
          description: the birth date to update
          type: integer
      responses:
        "200":
          description: Successfully updated a person 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /persons/delete/{personId}:
    x-swagger-router-controller: html_web_persons
    get:
      description: Returns html view for a disabled person deletion from
      produces: 
        - text/html
      operationId: getDelete
      parameters:
        - name: personId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully GOT a person for deletion
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Deletes a single person entry by a given id 
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - text/html
      operationId: delete
      parameters:
        - name: personId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Successfully deleted a person 
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:
  MoviesListBody:
    required:
      - movies
    properties:
      movies:
        type: array
        items:
          $ref: "#/definitions/MovieEntry"

  MovieEntry:
    type: object
    $ref: "#/definitions/Movie"    

  Movie:
    required:
      - tagline
      - title
      - released
    properties:
      tagline:
        type: string
      title:
        type: string
      released:
        type: integer
      rank:
        type: integer
        default: 5
        minimum: 1
        maximum: 10

  MovieBody:
    required:
      - movie
    properties:
      movie:
        $ref: "#/definitions/Movie"

  PersonsListBody:
    required:
      - persons
    properties:
      persons:
        type: array
        items:
          $ref: "#/definitions/PersonEntry"

  PersonEntry:
    type: object
    $ref: "#/definitions/Person"    

  Person:
    required:
      - name
      - born
    properties:
      name:
        type: string
      born:
        type: integer
      rank:
        type: integer
        default: 5
        minimum: 1
        maximum: 10

  PersonBody:
    required:
      - person
    properties:
      person:
        $ref: "#/definitions/Person"

  DeleteResponse:
    required:
      - nodes_deleted
    properties:
      nodes_deleted:
        type: integer

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
