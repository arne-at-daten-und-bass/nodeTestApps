extends layout
include mixins/readBulkMdlCards.jade

block content
  a(name='top')
  //- .android-be-together-section
  .top-section.mdl-typography--text-center
    .logo-font.android-slogan fliXnet
    .logo-font.android-sub-slogan(style="margin-bottom:20px;") - #{localesMenu['The Movie Graph']} -
  .graph-section
    #graph
    style.
      .node{

      }
      .nodeTextRect {
        display: none;
        stroke-width: 1;
        fill: white;
      }
      .nodeText{
        display: none; 
      }
      .link {
        font-size: xx-small;
        stroke: #999;
        stroke-opacity: .6;
        }
    script(src='//d3js.org/d3.v3.min.js' charset='utf-8')
    script.
      var width = 960,
          height = 600;

      var force = d3.layout.force()
          .charge(-270)
          .linkDistance(30)
          .size([width, height]);

      var svg = d3.select('#graph').append('svg')
          .attr('viewBox', '0 0 1044 600')
          .attr('preserveAspectRatio', 'xMidYMid meet');

      var color = d3.scale.ordinal()
          .domain(['Movie','Person'])
          .range(['#8bc34a', '#757575']);

      d3.json('/api/graph', function(error, graph) {
        if (error) throw error;

        var relationships =  graph.graph.links;
        var nodes = graph.graph.nodes;

        relationships.forEach(function (l, index) {
          if (!l.linkCount) { l.linkCount = 1; }
          var linkCount2 = 1;
          relationships.forEach(function (l2, index2) {
            if(relationships[index].source === relationships[index2].source  
            && relationships[index].target === relationships[index2].target){                  
              l2.linkCount = linkCount2++;
            } 
          })
        });

        force.nodes(nodes).links(relationships).gravity(0.25).start();

        var link = svg.selectAll('link')
            .data(relationships)
            .enter().append('g')
            .attr('class', 'link');

        var linkLine = link.append('line')    

        var linkText = link.append('text')
            .attr('text-anchor', 'middle')
            .attr('dy', function(d) { return 1 - d.linkCount + 'em'; })
            .text(function(d) { return d.value; });

        var node = svg.selectAll('node')
            .data(nodes)
            .enter().append('g')
            .attr('class', 'node')
            .call(force.drag);

        var nodeIcon = node.append('text')
            .text(function(d) {
              if(d.label === 'Movie') { return '\ue02c'; } 
              if(d.label === 'Person') { return '\ue7fd'; } })
            .attr('class', 'material-icons')
            .attr('text-anchor', 'middle')
            .attr('dominant-baseline', 'central')
            .style('fill', function(d) { return color(d.label); })
       
        var nodeTextRect = node.append('rect')
            .attr('id', function(d) {return 'nodeTextRect_' + d.id})
            .attr('class', 'nodeTextRect')
            .style('stroke', function(d) { return color(d.label); })

        var nodeText = node.append('text')
            .text(function(d) {
              if(d.name === undefined) { return d.title; } 
              if(d.title === undefined) { return d.name; } })
            .attr('id', function(d) {return 'nodeText_' + d.id})
            .attr('class', 'nodeText')
            .attr('dx', 12)
            .attr('dy', '.35em')
            .style('fill', function(d) { return color(d.label); });

        nodeIcon.on('mouseenter', function(d) {
          d3.select(this).style('font-size', 'xx-large');
          d3.select(this.parentNode).selectAll('.nodeText')
            .style({display:'inline'});
          d3.select('#nodeTextRect_' + d.id)
            .style({display:'inline'})
            .attr('width', function(d) { return document.getElementById('nodeText_' + d.id).getBBox().width + 10; })
            .attr('height', 20)
        });

        nodeIcon.on('dblclick', function (d) {
          if(d.name === undefined) { location.href = 'movies/read/' + d.id;} 
          if(d.title === undefined) { location.href = 'persons/read/' + d.id; }
          d3.select(this).style('font-size', 24);
          d3.select(this.parentNode).selectAll('.nodeText').style({display:'none'});
          d3.select(this.parentNode).selectAll('.nodeTextRect').style({display:'none'});
          }
        );

        nodeIcon.on('mouseleave', function() {
          d3.select(this).style('font-size', 24);
          d3.select(this.parentNode).selectAll('.nodeText').style({display:'none'}); 
          d3.select(this.parentNode).selectAll('.nodeTextRect').style({display:'none'});
        });   

        force.on('tick', function() {

          linkLine.attr('x1', function(d) { return d.source.x; })
                  .attr('y1', function(d) { return d.source.y; })
                  .attr('x2', function(d) { return d.target.x; })
                  .attr('y2', function(d) { return d.target.y; });

          linkText.attr('transform', function(d) {
                var angle = Math.atan((d.source.y - d.target.y) / (d.source.x - d.target.x)) * 180 / Math.PI;
                return 'translate(' + [((d.source.x + d.target.x) / 2), ((d.source.y + d.target.y) / 2)] + ')rotate(' + angle + ')';
              });

          nodeIcon.attr('x', function (d) { return d.x; })
              .attr('y', function (d) { return d.y; });

          nodeTextRect.attr('x', function (d) { return d.x+22; })
              .attr('y', function (d) { return d.y-10; });

          nodeText.attr('x', function (d) { return d.x+15; })
              .attr('y', function (d) { return d.y; });
        });

      });
  .table-text-section
    .mdl-typography--display-1.mdl-typography--font-thin Sample Implementation - The Famous 
      a.android-link.mdl-typography--font-thin(href='') Neo4j 
      |Â Movie Database
    .mdl-typography--title.mdl-typography--font-thin Modelling, storing and retrieving data as a graph.
    br
    .mdl-typography--display-1.mdl-typography--font-thin An HTML Web App and a JSON only API - Both Based on 
      a.android-link.mdl-typography--font-thin(href='') NodeJS
    .mdl-typography--title.mdl-typography--font-thin Full-Stack JavaScript.
    br
    .mdl-typography--display-1.mdl-typography--font-thin Automatic API Validation and Documentation - via 
      a.android-link.mdl-typography--font-thin(href='') Swagger
    .mdl-typography--title.mdl-typography--font-thin REST. SOA. Microservices. Or whatever you might call it.
    br
    .mdl-typography--display-1.mdl-typography--font-thin Besides 
      a.android-link.mdl-typography--font-thin(href='') D3JS 
      | - Plain JavaScript without Framework Dependencies
    .mdl-typography--title.mdl-typography--font-thin HTML templating server-side via 
      a.android-link.mdl-typography--font-thin(href='') Jade
      |.
    .mdl-typography--title.mdl-typography--font-thin 
      a.android-link.mdl-typography--font-thin(href='') XHR 
      | for client-side calls to the JSON API.
    br
    .mdl-typography--display-1.mdl-typography--font-thin Using 
      a.android-link.mdl-typography--font-thin(href='') Material Design Lite 
      | Layouts and Components
    .mdl-typography--title.mdl-typography--font-thin Optimized for cross-device Use.
  .mdl-card-section
    .android-section-title.mdl-typography--display-1-color-contrast Key Facts:
    .android-card-container.mdl-grid
      .mdl-cell.mdl-cell--4-col.mdl-shadow--3dp
        .mdl-card__media
          i(id="myI", style="opacity: 0.46;").material-icons linear_scale
        .mdl-card__title
          h4(id="myH").mdl-card__title-text Relationships
        .mdl-card__supporting-text(style="overflow: auto;")   
          table(style="width: 100%;").mdl-data-table.mdl-js-data-table
            thead
              tr
                th(id="myTh").mdl-data-table__cell--non-numeric Type
                th Total Amount
            tbody(id="myTable")
          a.android-link.mdl-button.mdl-js-button 
            i.material-icons(id="before0") navigate_before
            i.material-icons(id="next0") navigate_next
        script.
          var pagination0 = 1;

          app.tableBuilder('myTable', '/api/graph/read/typeAmountRelationships'); 

          var xsy = function () {
            //- console.log(pagination);
            var url;
            switch (pagination0) {
              case 0:
                url = '/api/graph/read/typeAmountRelationships';
                document.getElementById('myI').textContent = 'linear_scale';
                document.getElementById('myH').textContent = 'Relationships';
                document.getElementById('myTh').textContent = 'Type';
                pagination0 = pagination0 +1;
                break;
              case 1:
                url = '/api/graph/read/readLabelsAmountNodes';
                document.getElementById('myH').textContent = 'Nodes';
                document.getElementById('myI').textContent = 'grain';
                document.getElementById('myTh').textContent = 'Label';
                pagination0 = pagination0 -1;
                //- console.log(pagination);
                break;
              default:
                console.log('Default case.');
            } 
            app.tableBuilder('myTable', url);
            
            console.log(pagination);
          };
          document.getElementById('before0').onclick = xsy;
          document.getElementById('next0').onclick = xsy;

      .mdl-cell.mdl-cell--8-col.mdl-shadow--3dp
        .mdl-card__media
          i(style="opacity: 0.46;").material-icons blur_on
        .mdl-card__title
          h4.mdl-card__title-text Graph
        .mdl-card__supporting-text(style="overflow: auto;")        
          table(style="width: 100%;").mdl-data-table.mdl-js-data-table
            thead
              tr
                th.mdl-data-table__cell--non-numeric Source   
                th.mdl-data-table__cell--non-numeric Type
                th.mdl-data-table__cell--non-numeric Properties
                th.mdl-data-table__cell--non-numeric Target
            tbody(id="myTable2")
          a.android-link.mdl-button.mdl-js-button
            i.material-icons(id="before") navigate_before
            i.material-icons(id="next") navigate_next
          script.
            var pagination = 0;
            app.tableBuilder2('myTable2', '/api/graph/read/RelationshipsPagination?pagination=', pagination);
            document.getElementById('before').onclick = beforeFunc;           
            var beforeFunc = function () {
              pagination = pagination - 6;
              app.tableBuilder2('myTable2', '/api/graph/read/RelationshipsPagination?pagination=', pagination);
            }
            document.getElementById('next').onclick = nextFunc;
            var nextFunc = function () {
              pagination = pagination + 6;
              app.tableBuilder2('myTable2', '/api/graph/read/RelationshipsPagination?pagination=', pagination);
            }

            //- console.log(pagination);
  .mdl-card-section
    .android-section-title.mdl-typography--display-1-color-contrast Latest Movies:
    +moviesReadBulkMdlCards
    .android-section-title.mdl-typography--display-1-color-contrast Top Actors:
    .android-card-container.mdl-grid#TopPersons
      script.
        app.divBuilder('TopPersons', '/api/graph/read/top/persons?relationshipName=ACTED_IN', '#{locale}', "#{localesCommands['Show']}");
    //- .android-card-container.mdl-grid
    //-   .mdl-cell.mdl-cell--3-col.mdl-cell--4-col-tablet.mdl-cell--4-col-phone.mdl-card.mdl-shadow--3dp
    //-     .mdl-card__media
    //-       img(src='/images/more-from-1.png')
    //-     .mdl-card__title
    //-       h4.mdl-card__title-text Card title text
    //-     .mdl-card__supporting-text
    //-       span.mdl-typography--font-light.mdl-typography--subhead Font ligth Subhead
    //-     .mdl-card__actions
    //-       a.android-link.mdl-button.mdl-js-button.mdl-typography--text-uppercase(href='')
    //-         | Text uppercase
    //-         i.material-icons chevron_right