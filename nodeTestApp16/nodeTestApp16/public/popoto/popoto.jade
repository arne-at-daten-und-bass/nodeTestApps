doctype html
html
  head
    meta(http-equiv='Content-Type', content='text/html', charset='UTF-8')
    title Popoto Search
    link(rel='stylesheet', href='css/popoto.min.css')
  body.ppt-body
    // header.ppt-header
    section.ppt-section-main
      .ppt-section-header
        span.ppt-header-span Graph
        |  search
      .ppt-container-graph
        nav#popoto-taxonomy.ppt-taxo-nav
          // Label/taxonomy filter will be generated here
        #popoto-graph.ppt-div-graph
          // Graph will be generated here
      #popoto-query.ppt-container-query
        // Query viewer will be generated here
      #popoto-cypher.ppt-container-cypher
        // Cypher query viewer will be generated here
      .ppt-section-header
        // The total results count is updated with a listener defined below
        | RESULTS 
        span#result-total-count.ppt-count
      #popoto-results.ppt-container-results
        // Results will be generated here
    // ------------------
    // Required scripts
    // Jquery is only used in popoto.js to send ajax POST request on Neo4j REST API
    // This dependency will probably be removed in future releases
    script(src='js/jquery-2.1.0.min.js', charset='utf-8')
    script(src='js/d3.v3.min.js', charset='utf-8')
    script(src='js/popoto.min.js', charset='utf-8')
    script.
      /**
      * URL used to access Neo4j REST API to execute queries.
      * Update this parameter to your running server instance.
      *
      * For more information on Neo4J REST API the documentation is available here: http://neo4j.com/docs/stable/rest-api-cypher.html
      */
      popoto.rest.CYPHER_URL = "http://192.168.99.100:7474/db/data/transaction/commit";
      /**
      * Add this authorization property if your Neo4j server uses basic HTTP authentication.
      * The value of this property must be "Basic <payload>", where "payload" is a base64 encoded string of "username:password".
      *
      * "btoa" is a JavaScript function that can be used to encode the user and password value in base64 but it is recommended to directly use the Base64 value.
      *
      *  For example Base64 encoded value of "neo4j:password" is "bmVvNGo6cGFzc3dvcmQ="
      */
      popoto.rest.AUTHORIZATION = "Basic " + "bmVvNGo6cGFzc3dvcmQ=";
      /**
      * Define the Label provider you need for your application.
      * This configuration is mandatory and should contain at least all the labels you could find in your graph model.
      *
      * In this version only nodes with a label are supported.
      *
      * By default If no attributes are specified Neo4j internal ID will be used.
      * These label provider configuration can be used to customize the node display in the graph.
      * See www.popotojs.com or example for more details on available configuration options.
      */
      popoto.provider.nodeProviders = {
      "Person": {
      "returnAttributes": ["name", "born"],
      "constraintAttribute": "name"
      },
      "Movie": {
      "returnAttributes": ["title", "released", "tagline"],
      "constraintAttribute": "title"
      }
      };
      /**
      * Here a listener is used to retrieve the total results count and update the page accordingly.
      * This listener will be called on every graph modification.
      */
      popoto.result.onTotalResultCount(function (count) {
      document.getElementById("result-total-count").innerHTML = "(" + count + ")";
      });
      /**
      * The number of results returned can be changed with the following parameter.
      * Default value is 100.
      *
      * Note that in this current version no pagination mechanism is available in displayed results
      */
      //popoto.query.RESULTS_PAGE_SIZE = 100;
      /**
      * For this version, popoto.js has been generated with debug traces you can activate with the following properties:
      * The value can be one in DEBUG, INFO, WARN, ERROR, NONE.
      *
      * With INFO level all the executed cypher query can be seen in the navigator console.
      * Default is NONE
      */
      //popoto.logger.LEVEL = popoto.logger.LogLevels.INFO;
      /**
      * Start popoto.js generation.
      * The function requires the label to use as root element in the graph.
      */
      popoto.start("Person");

